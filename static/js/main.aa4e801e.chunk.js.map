{"version":3,"sources":["assets/store.ts","scenes/Conversation/index.module.css","scenes/Conversation/components/MessageRenderer/index.module.css","components/RoundContent/index.module.css","components/MessageContent/index.module.css","scenes/Conversation/components/ImageMessageRenderer/index.module.css","components/Layout/components/Header/index.module.css","components/Layout/index.module.css","scenes/Conversation/index.tsx","scenes/Conversation/components/TextMessageRenderer/index.module.css","assets/date.tsx","components/RoundContent/index.tsx","components/MessageContent/index.tsx","scenes/Conversation/components/TextMessageRenderer/index.tsx","scenes/Conversation/components/ImageMessageRenderer/index.tsx","scenes/Conversation/components/MessageRenderer/index.tsx","components/Layout/components/Header/index.tsx","components/Layout/index.tsx","app.tsx","reportWebVitals.ts","index.tsx"],"names":["store","currentUserId","users","id","username","messages","type","senderId","createdAt","content","url","caption","module","exports","Conversation","onChange","useState","textInput","setTextInput","fileInput","setFileInput","sendMessage","useCallback","ev","a","preventDefault","trim","length","Date","getTime","Buffer","arrayBuffer","buf","from","newMessage","toString","scrollbot","window","scrollTo","document","body","scrollHeight","useEffect","unlisten","addEventListener","className","s","root","map","msg","k","top","bot","standalone","mine","cl","message","showName","showDate","typing","onSubmit","value","currentTarget","placeholder","htmlFor","file","style","display","e","files","pad","nb","padStart","RoundContent","children","topleft","topright","bottomleft","bottomright","botleft","botright","MessageContent","rounded","renderedContent","useMemo","ats","str","search","index","result","indexOf","push","indexesOf","sortedUsers","sort","b","finalString","lastIndex","forEach","at","user","find","us","slice","startsWith","tag","formatContent","notmine","TextMessageRenderer","ImageMessageRenderer","image","src","alt","text","GetMessageComponent","MessageRenderer","date","open","setOpen","onClick","name","getDate","getMonth","getFullYear","getHours","getMinutes","Header","Layout","App","storeMessages","setMessages","sorted","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.aa4e801e.chunk.js","sourcesContent":["import { User, Message } from './types';\n\ninterface Store {\n  currentUserId: string;\n  users: User[];\n  messages: Message[];\n}\n\nexport const store: Store = {\n  currentUserId: 'maxime@kraaft.co',\n  users: [\n    {\n      id: 'maxime2@kraaft.co',\n      username: 'Maxime',\n    },\n    {\n      id: 'maxime@kraaft.co',\n      username: 'Maxime Blanchard',\n    },\n    {\n      id: 'cedric@kraaft.co',\n      username: 'Cedric Boidin',\n    },\n  ],\n  messages: [\n    {\n      id: 'JOyCwtqoK',\n      type: 'text',\n      senderId: 'maxime@kraaft.co',\n      createdAt: 1618056833265,\n      content:\n        \"Did you know @Cedric Boidin that the University of Iowa's locker room is painted pink? I wonder why?\",\n    },\n    {\n      id: 'yTFQY-vpSu',\n      type: 'text',\n      senderId: 'cedric@kraaft.co',\n      createdAt: 1618056839996,\n      content:\n        'I think I did hear something about that. I imagine it is an attempt to psych the other team out.',\n    },\n    {\n      id: 'yTFQY-vpSy',\n      type: 'text',\n      senderId: 'cedric@kraaft.co',\n      createdAt: 1618056839997,\n      content: 'I think',\n    },\n    {\n      id: '6ZzP46ndf4',\n      type: 'image',\n      senderId: 'maxime@kraaft.co',\n      createdAt: 1618056869148,\n      url: 'https://i.imgur.com/s7WucBN.png',\n      caption: `So, it would be in the visiting team's locker room but not their own?`,\n    },\n    {\n      id: 'Gee3s5UVi2',\n      type: 'image',\n      senderId: 'cedric@kraaft.co',\n      createdAt: 1618056882696,\n      url: 'https://i.imgur.com/WRgTbTg.png',\n      caption: `Right @Maxime. Teams do all kinds of things to bother the competition. I've heard of teams having heated benches in the winter for themselves but not for the visitors.`,\n    },\n    {\n      id: '6Fyn5NwJeA',\n      type: 'text',\n      senderId: 'maxime@kraaft.co',\n      createdAt: 1618056893845,\n      content: `I would hate a cold bench. Then again, I wouldn't want to be some place that cold or watching football.`,\n    },\n    {\n      id: 'sPJVnJGjHX',\n      type: 'image',\n      senderId: 'maxime@kraaft.co',\n      createdAt: 1618056917999,\n      url: 'https://i.imgur.com/9OAvz8R.png',\n      caption: `I'd rather watch it inside where it's warm. @Cedric Boidin Have you heard about the Georgia Tech-Cumberland game of 1916?`,\n    },\n    {\n      id: 'IHf9wxvqUV',\n      type: 'text',\n      senderId: 'cedric@kraaft.co',\n      createdAt: 1618056927368,\n      content: 'No, what happened in that game?',\n    },\n    {\n      id: '8ZDFgmLsYW',\n      type: 'image',\n      senderId: 'maxime@kraaft.co',\n      createdAt: 1618056949966,\n      url: 'https://i.imgur.com/wVLumym.jpg',\n      caption: `Georgia Tech defeated Cumberland but here's the thing, they defeated them by a score of 222-0!`,\n    },\n    {\n      id: '_IaJIIhFyN',\n      type: 'image',\n      senderId: 'cedric@kraaft.co',\n      createdAt: 1618056972544,\n      url: 'https://i.imgur.com/RHqQW9F.png',\n      caption: 'That is insane. How could that even happen?',\n    },\n    {\n      id: '5HMCClTDka',\n      type: 'text',\n      senderId: 'maxime@kraaft.co',\n      createdAt: 1618057001918,\n      content: `I don't know but it did.  It's the highest scoring game in history.`,\n    },\n  ],\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Conversation_root__1WU0t\",\"messages\":\"Conversation_messages__30bAd\",\"message\":\"Conversation_message__3eC1Z\",\"standalone\":\"Conversation_standalone__jcD1e\",\"mine\":\"Conversation_mine__1VMQ8\",\"bot\":\"Conversation_bot__3MUsF\",\"typing\":\"Conversation_typing__17R8-\",\"file\":\"Conversation_file__16skm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"MessageRenderer_root__1cDsm\",\"name\":\"MessageRenderer_name__1W2wQ\",\"date\":\"MessageRenderer_date__36vaB\",\"open\":\"MessageRenderer_open__12Pba\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"RoundContent_root__3jMK7\",\"topleft\":\"RoundContent_topleft__1gn5p\",\"topright\":\"RoundContent_topright__-Xuc-\",\"botleft\":\"RoundContent_botleft__1WVyZ\",\"botright\":\"RoundContent_botright__3QzAY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"MessageContent_root__26CH8\",\"mine\":\"MessageContent_mine__1CUIH\",\"notmine\":\"MessageContent_notmine__3dy8H\",\"tag\":\"MessageContent_tag__3qsIo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ImageMessageRenderer_root___RPJq\",\"image\":\"ImageMessageRenderer_image__1h0Bl\",\"text\":\"ImageMessageRenderer_text__1kl0e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Header_root__2xzr1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Layout_content__2ZQnQ\"};","import React, { useCallback, useEffect, useState } from 'react';\nimport cl from 'classnames';\nimport { store } from '../../assets/store';\nimport { Message as MessageType, Nullable } from '../../assets/types';\nimport Message from './components/MessageRenderer';\nimport s from './index.module.css';\n\ninterface ConversationProps {\n  messages: MessageType[];\n  onChange: (msg: MessageType[]) => void;\n}\n\n// Time after which a message is considered as a new conversation after the last one\nconst NEW_CONVERSATION_THRESHOLD_MS = 120 * 1000;\n\nfunction Conversation({ messages, onChange }: ConversationProps) {\n  const [textInput, setTextInput] = useState('');\n  const [fileInput, setFileInput] = useState<Nullable<File>>(null);\n\n  const sendMessage = useCallback(\n    async (ev) => {\n      ev.preventDefault();\n      if (textInput.trim().length === 0) return;\n\n      let newMessage: MessageType;\n      const createdAt = new Date().getTime();\n      const id = `message-${messages.length}`;\n      if (fileInput != null) {\n        const buf = Buffer.from(await fileInput.arrayBuffer());\n        newMessage = {\n          type: 'image',\n          caption: textInput,\n          createdAt,\n          id,\n          senderId: store.currentUserId,\n          url: `data:image/jpeg;base64,${buf.toString('base64')}`,\n        };\n      } else {\n        newMessage = {\n          type: 'text',\n          content: textInput,\n          createdAt,\n          id,\n          senderId: store.currentUserId,\n        };\n      }\n      setTextInput('');\n      setFileInput(null);\n      onChange([...messages, newMessage]);\n    },\n    [messages, onChange, textInput, fileInput],\n  );\n\n  const scrollbot = useCallback(() => {\n    window.scrollTo(0, window.document.body.scrollHeight);\n  }, []);\n\n  useEffect(() => {\n    const unlisten = window.addEventListener('load', scrollbot);\n    scrollbot();\n    return unlisten;\n  }, [messages, scrollbot]);\n\n  return (\n    <div className={s.root}>\n      <div className={s.messages}>\n        {messages.map((msg, k, a) => {\n          const top = k === 0 || a[k - 1].senderId !== msg.senderId;\n          const bot = k === a.length - 1 || a[k + 1].senderId !== msg.senderId;\n\n          const standalone =\n            k === 0 ||\n            k === a.length - 1 ||\n            a[k + 1].createdAt - msg.createdAt > NEW_CONVERSATION_THRESHOLD_MS;\n          const mine = store.currentUserId === msg.senderId;\n\n          return (\n            <div\n              key={msg.id}\n              className={cl(\n                s.message,\n                mine && s.mine,\n                bot && s.bot,\n                standalone && s.standalone,\n              )}>\n              <Message\n                message={msg}\n                showName={top}\n                showDate={standalone}\n                mine={mine}\n                top={top}\n                bot={bot}\n              />\n            </div>\n          );\n        })}\n      </div>\n      <form className={s.typing} onSubmit={sendMessage}>\n        <input\n          value={textInput}\n          onChange={(ev) => setTextInput(ev.currentTarget.value)}\n          placeholder=\"Write a message...\"\n        />\n        <label htmlFor=\"upload\">\n          <span className={s.file}>File</span>\n          <input\n            style={{ display: 'none' }}\n            id=\"upload\"\n            type=\"file\"\n            onChange={(e) => setFileInput(e?.currentTarget?.files?.[0] || null)}\n          />\n        </label>\n        <button type=\"submit\">Send</button>\n      </form>\n    </div>\n  );\n}\n\nexport default Conversation;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TextMessageRenderer_root__2BfoL\"};","const pad = (nb: number) => nb.toString().padStart(2, '0');\nexport const dateToMessageTime = (date: Date) =>\n  `${pad(date.getDate())}/${pad(date.getMonth())}/${pad(\n    date.getFullYear(),\n  )} - ${pad(date.getHours())}:${pad(date.getMinutes())}`;\n","import React from 'react';\nimport cl from 'classnames';\nimport s from './index.module.css';\n\ninterface RoundContentProps {\n  children: React.ReactNode;\n  className?: string;\n  topleft?: boolean;\n  topright?: boolean;\n  bottomleft?: boolean;\n  bottomright?: boolean;\n}\n\nfunction RoundContent({\n  children,\n  className,\n  topleft,\n  topright,\n  bottomleft,\n  bottomright,\n}: RoundContentProps) {\n  return (\n    <div\n      className={cl(\n        s.root,\n        topleft && s.topleft,\n        topright && s.topright,\n        bottomleft && s.botleft,\n        bottomright && s.botright,\n        className,\n      )}>\n      {children}\n    </div>\n  );\n}\n\nexport default RoundContent;\n","import React, { useMemo } from 'react';\nimport cl from 'classnames';\nimport { store } from '../../assets/store';\nimport s from './index.module.css';\nimport RoundContent from '../RoundContent';\n\ninterface MessageContentProps {\n  content: string;\n  mine: boolean;\n  className?: string;\n  rounded?: {\n    topleft?: boolean;\n    topright?: boolean;\n    bottomleft?: boolean;\n    bottomright?: boolean;\n  };\n}\n\nfunction indexesOf(str: string, search: string) {\n  let index = 0;\n  const result = [];\n  while (index !== -1) {\n    index = str.indexOf(search, index);\n    if (index !== -1) {\n      result.push(index);\n      index += 1;\n    }\n  }\n  return result;\n}\n\nfunction formatContent(content: string) {\n  const ats = indexesOf(content, '@');\n  const sortedUsers = store.users.sort(\n    (a, b) => b.username.length - a.username.length,\n  );\n  const finalString: React.ReactNode[] = [];\n  let lastIndex = 0;\n  ats.forEach((at) => {\n    // Find the first user that matches the string directly after the @\n    const user = sortedUsers.find((us) =>\n      content.slice(at + 1).startsWith(us.username),\n    );\n    if (!user) return;\n    finalString.push(content.slice(lastIndex, at));\n    finalString.push(<span className={s.tag}>@{user.username}</span>);\n    lastIndex = at + user.username.length + 1;\n  });\n  finalString.push(content.slice(lastIndex));\n  return finalString;\n}\n\nfunction MessageContent({\n  content,\n  mine,\n  className,\n  rounded,\n}: MessageContentProps) {\n  const renderedContent = useMemo(() => formatContent(content), [content]);\n\n  return (\n    <RoundContent\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...rounded}\n      className={cl(s.root, mine ? s.mine : s.notmine, className)}>\n      {renderedContent}\n    </RoundContent>\n  );\n}\n\nexport default MessageContent;\n","import React from 'react';\nimport cl from 'classnames';\nimport { TextMessage } from '../../../../assets/types';\nimport MessageContent from '../../../../components/MessageContent';\nimport { MessageTypeRendererProps } from '../types';\nimport s from './index.module.css';\n\nfunction TextMessageRenderer({\n  message: { content },\n  mine,\n  top,\n  bot,\n}: MessageTypeRendererProps<TextMessage>) {\n  return (\n    <div className={cl(s.root)}>\n      <MessageContent\n        content={content}\n        mine={mine}\n        rounded={{\n          topleft: mine || (!mine && top),\n          topright: (mine && top) || !mine,\n          bottomleft: mine || (!mine && bot),\n          bottomright: (mine && bot) || !mine,\n        }}\n      />\n    </div>\n  );\n}\n\nexport default TextMessageRenderer;\n","import React from 'react';\nimport { ImageMessage } from '../../../../assets/types';\nimport MessageContent from '../../../../components/MessageContent';\nimport RoundContent from '../../../../components/RoundContent';\nimport { MessageTypeRendererProps } from '../types';\nimport s from './index.module.css';\n\nfunction ImageMessageRenderer({\n  message: { caption, url },\n  mine,\n  top,\n}: MessageTypeRendererProps<ImageMessage>) {\n  return (\n    <div className={s.root}>\n      <RoundContent\n        topleft={mine || (!mine && top)}\n        topright={(mine && top) || !mine}>\n        <img className={s.image} src={url} alt=\"message\" />\n      </RoundContent>\n      <MessageContent\n        content={caption}\n        mine={mine}\n        className={s.text}\n        rounded={{ bottomleft: true, bottomright: true }}\n      />\n    </div>\n  );\n}\n\nexport default ImageMessageRenderer;\n","import React, { useState } from 'react';\nimport cl from 'classnames';\nimport { store } from '../../../../assets/store';\nimport { dateToMessageTime } from '../../../../assets/date';\nimport s from './index.module.css';\nimport { Message } from '../../../../assets/types';\nimport TextMessageRenderer from '../TextMessageRenderer';\nimport ImageMessageRenderer from '../ImageMessageRenderer';\n\nfunction GetMessageComponent(\n  message: Message,\n  mine: boolean,\n  top: boolean,\n  bot: boolean,\n) {\n  if (message.type === 'text')\n    return (\n      <TextMessageRenderer message={message} mine={mine} top={top} bot={bot} />\n    );\n  if (message.type === 'image')\n    return (\n      <ImageMessageRenderer message={message} mine={mine} top={top} bot={bot} />\n    );\n}\n\ninterface MessageRendererProps {\n  showDate: boolean;\n  showName: boolean;\n  message: Message;\n  mine: boolean;\n  top: boolean;\n  bot: boolean;\n}\n\nfunction MessageRenderer({\n  showDate,\n  showName,\n  message,\n  top,\n  bot,\n  mine,\n}: MessageRendererProps) {\n  // Did not succeed to remove the cast here\n  // The type of the Class variable should be determined by the props.type variable\n  // Then the message prop is always the same type as the prop required by the Class component\n  const [open, setOpen] = useState(false);\n\n  return (\n    <button type=\"button\" onClick={() => setOpen(!open)} className={s.root}>\n      <div className={cl(s.name, (showName || open) && s.open)}>\n        {/* Would be better here to access the user through a hashmap, but the store is fake anyways */}\n        {store.users.find((e) => e.id === message.senderId)?.username}\n      </div>\n      <div>{GetMessageComponent(message, mine, top, bot)}</div>\n      <div className={cl(s.date, (showDate || open) && s.open)}>\n        {dateToMessageTime(new Date(message.createdAt))}\n      </div>\n    </button>\n  );\n}\n\nexport default MessageRenderer;\n","import React from 'react';\nimport s from './index.module.css';\n\nfunction Header() {\n  return <header className={s.root}>Kraaft</header>;\n}\n\nexport default Header;\n","import React from 'react';\nimport Header from './components/Header';\nimport s from './index.module.css';\n\ninterface LayoutProps {\n  children: React.ReactNode;\n}\n\nfunction Layout({ children }: LayoutProps) {\n  return (\n    <div>\n      <Header />\n      <section className={s.content}>{children}</section>\n    </div>\n  );\n}\n\nexport default Layout;\n","import { useMemo, useState } from 'react';\nimport './app.css';\n\nimport { store } from './assets/store';\nimport Layout from './components/Layout';\n\nimport Conversation from './scenes/Conversation';\n\nconst App = () => {\n  const { messages: storeMessages } = store;\n  const [messages, setMessages] = useState(storeMessages);\n\n  const sorted = useMemo(\n    () => messages.sort((a, b) => a.createdAt - b.createdAt),\n    [messages],\n  );\n\n  return (\n    <Layout>\n      <Conversation messages={sorted} onChange={setMessages} />\n    </Layout>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}