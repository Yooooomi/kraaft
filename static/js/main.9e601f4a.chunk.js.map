{"version":3,"sources":["scenes/Conversation/components/Message/index.module.css","assets/store.ts","scenes/Conversation/index.module.css","components/Layout/index.module.css","components/Layout/components/Header/index.module.css","scenes/Conversation/index.tsx","services/date.tsx","scenes/Conversation/components/Message/index.tsx","components/Layout/components/Header/index.tsx","components/Layout/index.tsx","app.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","store","currentUserId","users","id","username","messages","type","senderId","createdAt","content","url","caption","Conversation","onChange","useState","textInput","setTextInput","fileInput","setFileInput","sendMessage","useCallback","ev","a","preventDefault","trim","length","Date","getTime","Buffer","arrayBuffer","buf","from","newMessage","toString","useEffect","window","scrollTo","document","body","scrollHeight","className","s","root","map","msg","k","top","bot","standalone","mine","cl","message","notmine","typing","onSubmit","value","currentTarget","placeholder","htmlFor","file","style","display","e","files","pad","nb","padStart","FormatMessage","text","usersTagged","us","occurences","index","indexOf","push","user","filter","allTags","oc","flat","occurence","sort","b","lastIndex","elements","forEach","tag","element","slice","TypeToComponent","textmine","textnotmine","image","src","alt","Message","date","Class","open","setOpen","onClick","name","find","class","getDate","getMonth","getFullYear","getHours","getMinutes","Header","Layout","children","App","storeMessages","setMessages","sorted","useMemo","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9e601f4a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Message_root__1IC9S\",\"text\":\"Message_text__3kDDq\",\"textmine\":\"Message_textmine__abpWK\",\"textnotmine\":\"Message_textnotmine__O6dDu\",\"image\":\"Message_image__2gXtS\",\"tag\":\"Message_tag__2noPt\",\"name\":\"Message_name__SKwgx\",\"date\":\"Message_date__2AR7O\",\"open\":\"Message_open__3jxt0\",\"class\":\"Message_class__VnhMR\",\"mine\":\"Message_mine__2-iFy\",\"notmine\":\"Message_notmine__27_wY\",\"bot\":\"Message_bot__1EwWb\"};","import { User, Message } from './types';\n\ninterface Store {\n  currentUserId: string;\n  users: User[];\n  messages: Message[];\n}\n\nexport const store: Store = {\n  currentUserId: 'maxime@kraaft.co',\n  users: [\n    {\n      id: 'maxime2@kraaft.co',\n      username: 'Maxime',\n    },\n    {\n      id: 'maxime@kraaft.co',\n      username: 'Maxime Blanchard',\n    },\n    {\n      id: 'cedric@kraaft.co',\n      username: 'Cedric Boidin',\n    },\n  ],\n  messages: [\n    {\n      id: 'JOyCwtqoK',\n      type: 'text',\n      senderId: 'maxime@kraaft.co',\n      createdAt: 1618056833265,\n      content:\n        \"Did you know @Cedric Boidin that the University of Iowa's locker room is painted pink? I wonder why?\",\n    },\n    {\n      id: 'yTFQY-vpSu',\n      type: 'text',\n      senderId: 'cedric@kraaft.co',\n      createdAt: 1618056839996,\n      content:\n        'I think I did hear something about that. I imagine it is an attempt to psych the other team out.',\n    },\n    {\n      id: '6ZzP46ndf4',\n      type: 'image',\n      senderId: 'maxime@kraaft.co',\n      createdAt: 1618056869148,\n      url: 'https://i.imgur.com/s7WucBN.png',\n      caption: `So, it would be in the visiting team's locker room but not their own?`,\n    },\n    {\n      id: 'Gee3s5UVi2',\n      type: 'image',\n      senderId: 'cedric@kraaft.co',\n      createdAt: 1618056882696,\n      url: 'https://i.imgur.com/WRgTbTg.png',\n      caption: `Right @Maxime. Teams do all kinds of things to bother the competition. I've heard of teams having heated benches in the winter for themselves but not for the visitors.`,\n    },\n    {\n      id: '6Fyn5NwJeA',\n      type: 'text',\n      senderId: 'maxime@kraaft.co',\n      createdAt: 1618056893845,\n      content: `I would hate a cold bench. Then again, I wouldn't want to be some place that cold or watching football.`,\n    },\n    {\n      id: 'sPJVnJGjHX',\n      type: 'image',\n      senderId: 'maxime@kraaft.co',\n      createdAt: 1618056917999,\n      url: 'https://i.imgur.com/9OAvz8R.png',\n      caption: `I'd rather watch it inside where it's warm. @Cedric Boidin Have you heard about the Georgia Tech-Cumberland game of 1916?`,\n    },\n    {\n      id: 'IHf9wxvqUV',\n      type: 'text',\n      senderId: 'cedric@kraaft.co',\n      createdAt: 1618056927368,\n      content: 'No, what happened in that game?',\n    },\n    {\n      id: '8ZDFgmLsYW',\n      type: 'image',\n      senderId: 'maxime@kraaft.co',\n      createdAt: 1618056949966,\n      url: 'https://i.imgur.com/wVLumym.jpg',\n      caption: `Georgia Tech defeated Cumberland but here's the thing, they defeated them by a score of 222-0!`,\n    },\n    {\n      id: '_IaJIIhFyN',\n      type: 'image',\n      senderId: 'cedric@kraaft.co',\n      createdAt: 1618056972544,\n      url: 'https://i.imgur.com/RHqQW9F.png',\n      caption: 'That is insane. How could that even happen?',\n    },\n    {\n      id: '5HMCClTDka',\n      type: 'text',\n      senderId: 'maxime@kraaft.co',\n      createdAt: 1618057001918,\n      content: `I don't know but it did.  It's the highest scoring game in history.`,\n    },\n  ],\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Conversation_root__1WU0t\",\"messages\":\"Conversation_messages__30bAd\",\"message\":\"Conversation_message__3eC1Z\",\"standalone\":\"Conversation_standalone__jcD1e\",\"mine\":\"Conversation_mine__1VMQ8\",\"bot\":\"Conversation_bot__3MUsF\",\"typing\":\"Conversation_typing__17R8-\",\"file\":\"Conversation_file__16skm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Layout_root__ananT\",\"content\":\"Layout_content__2ZQnQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Header_root__2xzr1\"};","import React, { useCallback, useEffect, useState } from 'react';\nimport cl from 'classnames';\nimport { store } from '../../assets/store';\nimport { Message as MessageType, Nullable } from '../../assets/types';\nimport Message from './components/Message';\nimport s from './index.module.css';\n\ninterface ConversationProps {\n  messages: MessageType[];\n  onChange: (msg: MessageType[]) => void;\n}\n\n// Time after which a message is considered as a new conversation after the last one\nconst NEW_CONVERSATION_THRESHOLD_MS = 120 * 1000;\n\nfunction Conversation({ messages, onChange }: ConversationProps) {\n  const [textInput, setTextInput] = useState('');\n  const [fileInput, setFileInput] = useState<Nullable<File>>(null);\n\n  const sendMessage = useCallback(\n    async (ev) => {\n      ev.preventDefault();\n      if (textInput.trim().length === 0) return;\n\n      let newMessage: MessageType;\n      const createdAt = new Date().getTime();\n      const id = `message-${messages.length}`;\n      if (fileInput != null) {\n        const buf = Buffer.from(await fileInput.arrayBuffer());\n        newMessage = {\n          type: 'image',\n          caption: textInput,\n          createdAt,\n          id,\n          senderId: store.currentUserId,\n          url: `data:image/jpeg;base64,${buf.toString('base64')}`,\n        };\n      } else {\n        newMessage = {\n          type: 'text',\n          content: textInput,\n          createdAt,\n          id,\n          senderId: store.currentUserId,\n        };\n      }\n      setTextInput('');\n      setFileInput(null);\n      onChange([...messages, newMessage]);\n    },\n    [messages, onChange, textInput, fileInput],\n  );\n\n  useEffect(() => {\n    window.scrollTo(0, window.document.body.scrollHeight);\n  }, [messages]);\n\n  return (\n    <div className={s.root}>\n      <div className={s.messages}>\n        {messages.map((msg, k, a) => {\n          const top = k === 0 || a[k - 1].senderId !== msg.senderId;\n          const bot = k === a.length - 1 || a[k + 1].senderId !== msg.senderId;\n\n          const standalone =\n            k === 0 ||\n            k === a.length - 1 ||\n            msg.createdAt - a[k + 1].createdAt > NEW_CONVERSATION_THRESHOLD_MS;\n          const mine = store.currentUserId === msg.senderId;\n\n          return (\n            <div\n              key={msg.id}\n              className={cl(\n                s.message,\n                mine ? s.mine : s.notmine,\n                bot && s.bot,\n              )}>\n              <Message\n                message={msg}\n                standalone={standalone}\n                mine={mine}\n                top={top}\n                bot={bot}\n              />\n            </div>\n          );\n        })}\n      </div>\n      <form className={s.typing} onSubmit={sendMessage}>\n        <input\n          value={textInput}\n          onChange={(ev) => setTextInput(ev.currentTarget.value)}\n          placeholder=\"Write a message...\"\n        />\n        <label htmlFor=\"upload\">\n          <span className={s.file}>File</span>\n          <input\n            style={{ display: 'none' }}\n            id=\"upload\"\n            type=\"file\"\n            onChange={(e) => setFileInput(e?.currentTarget?.files?.[0] || null)}\n          />\n        </label>\n        <button type=\"submit\">Send</button>\n      </form>\n    </div>\n  );\n}\n\nexport default Conversation;\n","const pad = (nb: number) => nb.toString().padStart(2, '0');\nexport const dateToMessageTime = (date: Date) =>\n  `${pad(date.getDate())}/${pad(date.getMonth())}/${pad(\n    date.getFullYear(),\n  )} - ${pad(date.getHours())}:${pad(date.getMinutes())}`;\n","import React, { useState } from 'react';\nimport cl from 'classnames';\nimport { store } from '../../../../assets/store';\nimport {\n  ImageMessage,\n  Message as MessageT,\n  MessageFromTypeString,\n  MessageType,\n  TextMessage,\n} from '../../../../assets/types';\nimport { dateToMessageTime } from '../../../../services/date';\nimport s from './index.module.css';\n\nconst FormatMessage = (text: string) => {\n  let usersTagged = store.users\n    .map((us) => {\n      const occurences = [];\n      let index = 0;\n      while (index !== -1) {\n        index = text.indexOf(us.username, index);\n        if (index !== -1) {\n          occurences.push(index);\n          index += 1;\n        }\n      }\n      return { user: us, occurences };\n    })\n    .filter((e) => e.occurences.length > 0);\n  usersTagged = usersTagged\n    .filter((user) => {\n      // eslint-disable-next-line no-param-reassign\n      user.occurences = user.occurences.filter(\n        (oc) => oc !== 0 && text[oc - 1] === '@',\n      );\n      return user.occurences.length > 0;\n    })\n    .flat();\n  const allTags = usersTagged\n    .map((user) => {\n      return user.occurences.map((oc) => ({ occurence: oc, user: user.user }));\n    })\n    .flat()\n    .sort((a, b) => a.occurence - b.occurence);\n  let lastIndex = 0;\n  const elements = [];\n  allTags.forEach((tag) => {\n    const element = text.slice(lastIndex, tag.occurence - 1);\n    elements.push(element);\n    elements.push(<span className={s.tag}>@{tag.user.username}</span>);\n    lastIndex = tag.occurence + tag.user.username.length;\n  });\n  elements.push(text.slice(lastIndex, text.length));\n  return elements;\n};\n\ninterface MessageDisplayProps<T extends MessageT> {\n  mine: boolean;\n  message: T;\n}\n\nconst MessageText: React.FunctionComponent<\n  MessageDisplayProps<TextMessage>\n> = ({ mine, message: { content } }) => {\n  return (\n    <div className={cl(s.text, mine ? s.textmine : s.textnotmine)}>\n      {FormatMessage(content)}\n    </div>\n  );\n};\n\nconst MessageImage: React.FunctionComponent<\n  MessageDisplayProps<ImageMessage>\n> = ({ mine, message: { caption, url } }) => {\n  return (\n    <div className={s.image}>\n      <img src={url} alt=\"message\" />\n      <span className={mine ? s.textmine : s.textnotmine}>\n        {FormatMessage(caption)}\n      </span>\n    </div>\n  );\n};\n\ntype TypeToComponentDict = {\n  [key in MessageType]: React.FunctionComponent<\n    MessageDisplayProps<MessageFromTypeString<key>>\n  >;\n};\n\nconst TypeToComponent: TypeToComponentDict = {\n  text: MessageText,\n  image: MessageImage,\n};\n\ninterface MessageProps<T extends MessageT> {\n  standalone: boolean;\n  message: T;\n  mine: boolean;\n  top: boolean;\n  bot: boolean;\n}\n\nfunction Message<T extends MessageT>({\n  standalone,\n  message,\n  top,\n  bot,\n  mine,\n}: MessageProps<T>) {\n  // Did not succeed to remove the cast here\n  // The type of the Class variable should be determined by the props.type variable\n  // Then the message prop is always the same type as the prop required by the Class component\n  const Class = TypeToComponent[message.type] as React.FunctionComponent<\n    MessageDisplayProps<MessageT>\n  >;\n\n  const [open, setOpen] = useState(false);\n\n  return (\n    <button type=\"button\" onClick={() => setOpen(!open)} className={s.root}>\n      <div className={cl(s.name, (top || open) && s.open)}>\n        {/* Would be better here to access the user through a hashmap, but the store is fake anyways */}\n        {store.users.find((e) => e.id === message.senderId)?.username}\n      </div>\n      <div\n        className={cl(\n          s.class,\n          mine ? s.mine : s.notmine,\n          top && s.top,\n          bot && s.bot,\n        )}>\n        <Class message={message} mine={mine} />\n      </div>\n      <div className={cl(s.date, (standalone || open) && s.open)}>\n        {dateToMessageTime(new Date(message.createdAt))}\n      </div>\n    </button>\n  );\n}\n\nexport default Message;\n","import React from 'react';\nimport s from './index.module.css';\n\nfunction Header() {\n  return <header className={s.root}>Kraaft</header>;\n}\n\nexport default Header;\n","import React from 'react';\nimport Header from './components/Header';\nimport s from './index.module.css';\n\ninterface LayoutProps {\n  children: React.ReactNode;\n}\n\nfunction Layout({ children }: LayoutProps) {\n  return (\n    <div className={s.root}>\n      <Header />\n      <section className={s.content}>{children}</section>\n    </div>\n  );\n}\n\nexport default Layout;\n","import { useMemo, useState } from 'react';\nimport './app.css';\n\nimport { store } from './assets/store';\nimport Layout from './components/Layout';\n\nimport Conversation from './scenes/Conversation';\n\nconst App = () => {\n  const { messages: storeMessages } = store;\n  const [messages, setMessages] = useState(storeMessages);\n\n  const sorted = useMemo(\n    () => messages.sort((a, b) => a.createdAt - b.createdAt),\n    [messages],\n  );\n\n  return (\n    <Layout>\n      <Conversation messages={sorted} onChange={setMessages} />\n    </Layout>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}